openapi: 3.1.0
info:
  title: FastAPI
  version: 0.1.0
paths:
  /token:
    post:
      summary: Login For Access Token
      operationId: login_for_access_token_token_post
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Body_login_for_access_token_token_post'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /users:
    post:
      summary: Create User
      operationId: create_user_users_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserInsert'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /users/{user_login}:
    get:
      summary: Find By Login
      operationId: find_by_login_users__user_login__get
      security:
        - OAuth2PasswordBearer: []
      parameters:
        - name: user_login
          in: path
          required: true
          schema:
            type: string
            title: User Login
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /users/{user_name}/{user_surname}:
    get:
      summary: Find By Full Name
      operationId: find_by_full_name_users__user_name___user_surname__get
      security:
        - OAuth2PasswordBearer: []
      parameters:
        - name: user_name
          in: path
          required: true
          schema:
            type: string
            title: User Name
        - name: user_surname
          in: path
          required: true
          schema:
            type: string
            title: User Surname
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserResponse'
                title: >-
                  Response Find By Full Name Users  User Name   User Surname 
                  Get
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
components:
  schemas:
    Body_login_for_access_token_token_post:
      properties:
        grant_type:
          anyOf:
            - type: string
              pattern: ^password$
            - type: 'null'
          title: Grant Type
        username:
          type: string
          title: Username
        password:
          type: string
          title: Password
        scope:
          type: string
          title: Scope
          default: ''
        client_id:
          anyOf:
            - type: string
            - type: 'null'
          title: Client Id
        client_secret:
          anyOf:
            - type: string
            - type: 'null'
          title: Client Secret
      type: object
      required:
        - username
        - password
      title: Body_login_for_access_token_token_post
    HTTPValidationError:
      properties:
        detail:
          items:
            $ref: '#/components/schemas/ValidationError'
          type: array
          title: Detail
      type: object
      title: HTTPValidationError
    UserInsert:
      properties:
        id:
          type: integer
          title: Id
        login:
          type: string
          title: Login
        name:
          type: string
          title: Name
        surname:
          type: string
          title: Surname
        email:
          type: string
          title: Email
        hashed_password:
          type: string
          title: Hashed Password
        age:
          type: integer
          title: Age
      type: object
      required:
        - id
        - login
        - name
        - surname
        - email
        - hashed_password
        - age
      title: UserInsert
    UserResponse:
      properties:
        id:
          type: integer
          title: Id
        name:
          type: string
          title: Name
        surname:
          type: string
          title: Surname
      type: object
      required:
        - id
        - name
        - surname
      title: UserResponse
    ValidationError:
      properties:
        loc:
          items:
            anyOf:
              - type: string
              - type: integer
          type: array
          title: Location
        msg:
          type: string
          title: Message
        type:
          type: string
          title: Error Type
      type: object
      required:
        - loc
        - msg
        - type
      title: ValidationError
  securitySchemes:
    OAuth2PasswordBearer:
      type: oauth2
      flows:
        password:
          scopes: {}
          tokenUrl: token
