version: "3"

services:

  redis:
    image: redis
    container_name: redis_cache
    volumes:
      - redisdata:/data
    ports:
      - '6379:6379'
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "redis", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5

  mongo:
    image: mongo:5.0
    container_name: mongodb
    restart: on-failure
    environment:
      MONGO_INITDB_ROOT_USERNAME: mongo
      MONGO_INITDB_ROOT_PASSWORD: mongo
      MONGO_INITDB_DATABASE: orders
    volumes:
      - ./db_scripts/init_mongo.js:/docker-entrypoint-initdb.d/init_mongo.js
      - mongodbdata:/data/db
    ports:
      - '27017:27017'
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet

  postgres:
    image: postgres:14
    container_name: user-postgres
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    volumes:
      - ./db_scripts:/docker-entrypoint-initdb.d/
      - postgres_data:/var/lib/postgresql/data

  user_service:
    build: user_service
    ports:
      - "8001:8000"
    volumes:
      - ./user_service:/app
    environment:
      - SECRET_KEY=your-secret-key
      - ALGORITHM=HS256
      - ACCESS_TOKEN_EXPIRE_MINUTES=30
    depends_on:
      - postgres
      - redis
    command: uvicorn user_service:app --host 0.0.0.0 --port 8000 --reload
  delivery_service:
    build: delivery_service
    ports:
      - "8002:8000"
    volumes:
      - ./delivery_service:/app
    environment:
      - SECRET_KEY=your-secret-key
      - ALGORITHM=HS256
      - ACCESS_TOKEN_EXPIRE_MINUTES=30
    depends_on:
      - user_service
      - mongo
    command: uvicorn delivery_service:app --host 0.0.0.0 --port 8000 --reload

volumes:
  redisdata:
  mongodbdata:
  postgres_data: